"""Initial

Revision ID: e52300d57274
Revises: 
Create Date: 2025-08-19 15:06:29.593883

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e52300d57274'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('subject', sa.String(length=160), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('recipients', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'QUEUED', 'PROCESSING', 'SENT', 'PARTIAL', 'FAILED', 'RETRYING', 'CANCELLED', 'SCHEDULED', name='notification_status', inherit_schema=True), nullable=False),
    sa.Column('priority', sa.SmallInteger(), server_default=sa.text('0'), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attempt_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('last_attempt_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('provider_message_id', sa.String(length=160), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('template_code', sa.String(length=120), nullable=True),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.CheckConstraint('attempt_count >= 0', name='ck_notifications_attempt_count_nonneg'),
    sa.CheckConstraint('priority BETWEEN -10 AND 100', name='ck_notifications_priority_range'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_notifications_provider_msg', 'notifications', ['provider_message_id'], unique=False, postgresql_where=sa.text('provider_message_id IS NOT NULL AND is_deleted = false'))
    op.create_index('ix_notifications_recipients_gin', 'notifications', [sa.literal_column('recipients')], unique=False, postgresql_using='gin')
    op.create_index('ix_notifications_status_active', 'notifications', ['status'], unique=False, postgresql_where=sa.text('is_deleted = false'))
    op.create_index('ix_notifications_status_scheduled', 'notifications', ['status', 'scheduled_at'], unique=False, postgresql_where=sa.text('is_deleted = false'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_notifications_status_scheduled', table_name='notifications', postgresql_where=sa.text('is_deleted = false'))
    op.drop_index('ix_notifications_status_active', table_name='notifications', postgresql_where=sa.text('is_deleted = false'))
    op.drop_index('ix_notifications_recipients_gin', table_name='notifications', postgresql_using='gin')
    op.drop_index('ix_notifications_provider_msg', table_name='notifications', postgresql_where=sa.text('provider_message_id IS NOT NULL AND is_deleted = false'))
    op.drop_table('notifications')
    # ### end Alembic commands ###
